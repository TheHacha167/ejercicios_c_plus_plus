/*
Realice las siguientes funciones para el trabajo con vectores de strings:
 FunciÂ´on que recibe como entrada un tamaËœno y devuelve un vector ubicado en
memoria dinÂ´amica de ese tamaËœ no.
 FunciÂ´on que recibe como entrada un vector de strings y su tamaËœno y muestre en
la salida estÂ´andar los strings. Cada string debe aparecer en una lÂ´Ä±nea distinta.
 FunciÂ´on que reciba un vector de strings ubicado en memoria dinÂ´amica, su tamaËœno
y un nuevo tamaËœ no. La funciÂ´on debe trasladar el vector original a otro vector en
memoria dinÂ´amica que tenga el nuevo tamaËœ no. Nuevo tamaËœno puede ser menor
o mayor que el tamaËœno previo. Se debe liberar la memoria ocupada por el vector
original y se debe devolver la direcci Â´on de inicio en memoria dinÂ´amica del nuevo
vector.
 FunciÂ´on que reciba un vector de strings y devuelva una copia del vector.
 FunciÂ´on main que permita probar las funciones anteriores.
*/
#include <iostream>
#include <string>

std::string* crearVectorStrings(int tamano) {
    std::string* vector = new std::string[tamano];
    return vector;
}

void mostrarVectorStrings(std::string* vector, int tamano) {
    for (int i = 0; i < tamano; ++i) {
        std::cout << vector[i] << std::endl;
    }
}

std::string* redimensionarVectorStrings(std::string* vector, int tamanoActual, int nuevoTamano) {
    std::string* nuevoVector = new std::string[nuevoTamano];
    int copiarElementos = std::min(tamanoActual, nuevoTamano);
    for (int i = 0; i < copiarElementos; ++i) {
        nuevoVector[i] = vector[i];
    }
    delete[] vector;
    return nuevoVector;
}

std::string* copiarVectorStrings(const std::string* vector, int tamano) {
    std::string* nuevoVector = new std::string[tamano];
    for (int i = 0; i < tamano; ++i) {
        nuevoVector[i] = vector[i];
    }
    return nuevoVector;
}

int main() {
    int tamano;
    std::cout << "Ingrese el tamaÃ±o del vector de strings: ";
    std::cin >> tamano;

    std::string* vector = crearVectorStrings(tamano);

    std::cout << "Ingrese " << tamano << " strings:" << std::endl;
    for (int i = 0; i < tamano; ++i) {
        std::cin >> vector[i];
    }

    std::cout << "Contenido del vector original:" << std::endl;
    mostrarVectorStrings(vector, tamano);

    int nuevoTamano;
    std::cout << "Ingrese el nuevo tamaÃ±o del vector: ";
    std::cin >> nuevoTamano;

    std::string* nuevoVector = redimensionarVectorStrings(vector, tamano, nuevoTamano);

    std::cout << "Contenido del nuevo vector redimensionado:" << std::endl;
    mostrarVectorStrings(nuevoVector, nuevoTamano);

    std::string* copiaVector = copiarVectorStrings(nuevoVector, nuevoTamano);

    std::cout << "Copia del nuevo vector:" << std::endl;
    mostrarVectorStrings(copiaVector, nuevoTamano);

    delete[] vector;
    delete[] nuevoVector;
    delete[] copiaVector;

    return 0;
}
